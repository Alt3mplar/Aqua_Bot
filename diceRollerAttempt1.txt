#dice roller attempt 1
'''
@client.command(aliases = ['coin', 'coinFlip', '2'])
async def d2(message, client):
  try:
    lower_bound = int([0])
    upper_bound = int([1])
  except ValueError:
    await client.send_message(message.channel, "Please, provide valid numbers")
    return

  if lower_bound > upper_bound:
    await client.send_message(message.channel, "The lower bound can't be higher than the upper bound")
    return

  rolled = randint(lower_bound, upper_bound)
  msg = get_emoji(":phuggers:") + f" You rolled {rolled}!"

  await client.send_message(message.channel, msg)

@client.command(aliases = ['4'])
async def d4(message, client):
  try:
    lower_bound = int([1])
    upper_bound = int([4])
  except ValueError:
    await client.send_message(message.channel, "Please, provide valid numbers")
    return

  if lower_bound > upper_bound:
    await client.send_message(message.channel, "The lower bound can't be higher than the upper bound")
    return

  rolled = randint(lower_bound, upper_bound)
  msg = get_emoji(":phuggers:") + f" You rolled {rolled}!"

  await client.send_message(message.channel, msg)

@client.command(aliases = ['6'])
async def d6(message, client):
  try:
    lower_bound = int([1])
    upper_bound = int([6])
  except ValueError:
    await client.send_message(message.channel, "Please, provide valid numbers")
    return

  if lower_bound > upper_bound:
    await client.send_message(message.channel, "The lower bound can't be higher than the upper bound")
    return

  rolled = randint(lower_bound, upper_bound)
  msg = get_emoji(":phuggers:") + f" You rolled {rolled}!"

  await client.send_message(message.channel, msg)

@client.command(aliases = ['8'])
async def d8(message, client):
  try:
    lower_bound = int([1])
    upper_bound = int([8])
  except ValueError:
    await client.send_message(message.channel, "Please, provide valid numbers")
    return

  if lower_bound > upper_bound:
    await client.send_message(message.channel, "The lower bound can't be higher than the upper bound")
    return

  rolled = randint(lower_bound, upper_bound)
  msg = get_emoji(":phuggers:") + f" You rolled {rolled}!"

  await client.send_message(message.channel, msg)

@client.command(aliases = ['10'])
async def d10(message, client):
  try:
    lower_bound = int([0])
    upper_bound = int([10])
  except ValueError:
    await client.send_message(message.channel, "Please, provide valid numbers")
    return

  if lower_bound > upper_bound:
    await client.send_message(message.channel, "The lower bound can't be higher than the upper bound")
    return

  rolled = randint(lower_bound, upper_bound)
  msg = get_emoji(":phuggers:") + f" You rolled {rolled}!"

  await client.send_message(message.channel, msg)

@client.command(aliases = ['12'])
async def d12(message, client):
  try:
    lower_bound = int([1])
    upper_bound = int([12])
  except ValueError:
    await client.send_message(message.channel, "Please, provide valid numbers")
    return

  if lower_bound > upper_bound:
    await client.send_message(message.channel, "The lower bound can't be higher than the upper bound")
    return

  rolled = randint(lower_bound, upper_bound)
  msg = get_emoji(":phuggers:") + f" You rolled {rolled}!"

  await client.send_message(message.channel, msg)

@client.command(aliases = ['20'])
async def d20(message, client):
  try:
    lower_bound = int([1])
    upper_bound = int([20])
  except ValueError:
    await client.send_message(message.channel, "Please, provide valid numbers")
    return

  if lower_bound > upper_bound:
    await client.send_message(message.channel, "The lower bound can't be higher than the upper bound")
    return

  rolled = randint(lower_bound, upper_bound)
  msg = get_emoji(":phuggers:") + f" You rolled {rolled}!"

  await client.send_message(message.channel, msg)

@client.command(aliases = ['100'])
async def d100(message, client):
  try:
    lower_bound = int([0])
    upper_bound = int([90])
  except ValueError:
    await client.send_message(message.channel, "Please, provide valid numbers")
    return

  if lower_bound > upper_bound:
    await client.send_message(message.channel, "The lower bound can't be higher than the upper bound")
    return

  rolled = randint(lower_bound, upper_bound)
  msg = get_emoji(":phuggers:") + f" You rolled {rolled}!"

  await client.send_message(message.channel, msg)
'''